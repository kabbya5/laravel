// middleware create and active 
php artisan make:middleware AdminMiddleware

//resister middleware in app/Kernel.php in 
    use App\Http\Middleware\AdminMiddleware;
  // protected $routeMiddleware
  'admin' => AdminMiddleware::class,
  
  
// Route  group 
Route::group([
    'prefix'=> 'admin',
    'namespace'=> "Admin",
    'middleware'=> ['auth','admin']
],function(){
    Route::get('/dashboard',[AdminDashboardController::class,'dashboard'])->name('admin.dashboard');
});


//foreach 
 @foreach ($categories as $key => $cat)
    <td class="w-40 text-left bg-white">
        {{ $key+1 }}
    </td>
    
  // Custom Route File  App\Providers\Route Service Providers 
  
 public function boot()
    {
        $this->configureRateLimiting();

        Route::bind('slug',function($slug){
            $product = Product::where('slug',$slug)->first();
            return $product ? $product : abort(404);
        });

        $this->routes(function () {
            Route::prefix('api')
                ->middleware('api')
                ->namespace($this->namespace)
                ->group(base_path('routes/api.php'));

            Route::middleware('web')
                ->namespace($this->namespace)
                ->group(base_path('routes/web.php'));
        });
    }
