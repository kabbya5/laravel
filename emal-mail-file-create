php artisan make:male adminOrderMail 
//App/Mail/adminOrderMail

/controller 

   public function sendMessage(Request $request){
        $request->validate([
            'name' => 'required|string|max:150',
            'mail' => 'required|email',
            'subject' => 'required|string',
            'body'   => 'required|min:40|max:1000',
        ]);

        $this->sendMessageMailAdmin($request);
        $this->sendFeedbackMailToUser($request->mail,$request->name);
    }
    
    private function sendMessageMailAdmin($request){
        $mail = "kabbya44@gmail.com";
        Mail::to($mail)->send(new AdminMailSendMessage($request));
    }

    private function sendFeedbackMailToUser($mail,$name){
        Mail::to($mail)->send(new UserMailAfterSendMessage($name));
    }
    
   // mail.php


namespace App\Mail;

use Illuminate\Bus\Queueable;
use Illuminate\Mail\Mailable;
use Illuminate\Mail\Mailables\Address;
use Illuminate\Mail\Mailables\Content;
use Illuminate\Mail\Mailables\Envelope;
use Illuminate\Queue\SerializesModels;

class UserMailAfterSendMessage extends Mailable
{
    use Queueable, SerializesModels;

    public $name;

    public $formEmail = "kabbya44@gmail.com";

    /**
     * Create a new message instance.
     *
     * @return void
     */
    public function __construct($name)
    {
        $this->name = $name;
    }

    /**
     * Get the message envelope.
     *
     * @return \Illuminate\Mail\Mailables\Envelope
     */
    public function envelope()
    {
        return new Envelope(
            from: new Address($this->formEmail, 'kabbya44.xyz'),
            subject: 'Mesage send Form Kabbya44.xyz',
        );
    }

    /**
     * Get the message content definition.
     *
     * @return \Illuminate\Mail\Mailables\Content
     */
    public function content()
    {
        return new Content(
            view: 'mail.usersentMessage',
            with:['name' => $this->name],
        );
    }

    /**
     * Get the attachments for the message.
     *
     * @return array
     */
    public function attachments()
    {
        return [];
    }
}
